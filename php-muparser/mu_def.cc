#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

/**

copy from muParserDef.h
 
**/

#include "php.h"
#include "SAPI.h"
#include "php_muparser.h"
#include "util.h"
#include "muParser.h"
#include "mu_def.h"

using namespace mu;

#define MU_REGISTER_LONG_CONSTANT(n) \
    REGISTER_NS_LONG_CONSTANT("mu", #n, n, CONST_CS | CONST_PERSISTENT)

MUPARSER_STARTUP_FUNCTION(def) {

    // ECmdCode
    MU_REGISTER_LONG_CONSTANT(cmLE);
    MU_REGISTER_LONG_CONSTANT(cmGE);
    MU_REGISTER_LONG_CONSTANT(cmNEQ);
    MU_REGISTER_LONG_CONSTANT(cmEQ);
    MU_REGISTER_LONG_CONSTANT(cmLT);
    MU_REGISTER_LONG_CONSTANT(cmGT);
    MU_REGISTER_LONG_CONSTANT(cmADD);
    MU_REGISTER_LONG_CONSTANT(cmSUB);
    MU_REGISTER_LONG_CONSTANT(cmMUL);
    MU_REGISTER_LONG_CONSTANT(cmDIV);
    MU_REGISTER_LONG_CONSTANT(cmPOW);
    MU_REGISTER_LONG_CONSTANT(cmLAND);
    MU_REGISTER_LONG_CONSTANT(cmLOR);
    MU_REGISTER_LONG_CONSTANT(cmASSIGN);
    MU_REGISTER_LONG_CONSTANT(cmBO);
    MU_REGISTER_LONG_CONSTANT(cmBC);
    MU_REGISTER_LONG_CONSTANT(cmIF);
    MU_REGISTER_LONG_CONSTANT(cmELSE);
    MU_REGISTER_LONG_CONSTANT(cmENDIF);
    MU_REGISTER_LONG_CONSTANT(cmARG_SEP);
    MU_REGISTER_LONG_CONSTANT(cmVAR);
    MU_REGISTER_LONG_CONSTANT(cmVAL);

    /*
    MU_REGISTER_LONG_CONSTANT(cmVARPOW2);
    MU_REGISTER_LONG_CONSTANT(cmVARPOW3);
    MU_REGISTER_LONG_CONSTANT(cmVARPOW4);
    MU_REGISTER_LONG_CONSTANT(cmVARMUL);
    MU_REGISTER_LONG_CONSTANT(cmPOW2);
    */

    MU_REGISTER_LONG_CONSTANT(cmFUNC);
    MU_REGISTER_LONG_CONSTANT(cmFUNC_STR);
    MU_REGISTER_LONG_CONSTANT(cmFUNC_BULK);
    MU_REGISTER_LONG_CONSTANT(cmSTRING);
    MU_REGISTER_LONG_CONSTANT(cmOPRT_BIN);
    MU_REGISTER_LONG_CONSTANT(cmOPRT_POSTFIX);
    MU_REGISTER_LONG_CONSTANT(cmOPRT_INFIX);
    MU_REGISTER_LONG_CONSTANT(cmEND);
    MU_REGISTER_LONG_CONSTANT(cmUNKNOWN);

    // ETypeCode
    MU_REGISTER_LONG_CONSTANT(tpSTR);
    MU_REGISTER_LONG_CONSTANT(tpDBL);
    MU_REGISTER_LONG_CONSTANT(tpVOID);

    // EParserVersionInfo
    MU_REGISTER_LONG_CONSTANT(pviBRIEF);
    MU_REGISTER_LONG_CONSTANT(pviFULL);

    // EOprtAssociativity
    MU_REGISTER_LONG_CONSTANT(oaLEFT);
    MU_REGISTER_LONG_CONSTANT(oaRIGHT);
    MU_REGISTER_LONG_CONSTANT(oaNONE);

    // EOprtPrecedence
    MU_REGISTER_LONG_CONSTANT(prLOR);
    MU_REGISTER_LONG_CONSTANT(prLAND);
    MU_REGISTER_LONG_CONSTANT(prLOGIC);
    MU_REGISTER_LONG_CONSTANT(prCMP);
    MU_REGISTER_LONG_CONSTANT(prADD_SUB);
    MU_REGISTER_LONG_CONSTANT(prMUL_DIV);
    MU_REGISTER_LONG_CONSTANT(prPOW);
    MU_REGISTER_LONG_CONSTANT(prINFIX);
    MU_REGISTER_LONG_CONSTANT(prPOSTFIX);
}

